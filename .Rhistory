knitr::opts_chunk$set(echo = TRUE)
data21 <- subset(ChickWeight, Diet %in% c(1,4) & Time == 21)
data21$weightGroup <- 0
data21$weightGroup[data21$weight < 110] <- 1
fit1 <- glm(weightGroup ~ Diet, family = "binomial", data = data21)
summary(fit1)
data0 <- subset(ChickWeight, Time == 0)
data21 <- merge(data21, data0, by = "Chick")
names(data21)[names(data21) == "weight.y"] <- "birthWeight"
names(data21)[names(data21) == "Diet.x"] <- "Diet"
fit2 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21)
summary(fit2)
data21.allDiets <- subset(ChickWeight, Time == 21)
data21.allDiets$weightGroup <- 0
data21.allDiets$weightGroup[data21.allDiets$weight < 110] <- 1
fit3 <- glm(weightGroup ~ Diet, family = "binomial", data = data21.allDiets)
summary(fit3)
data21.allDiets <- merge(data21.allDiets, data0, by = "Chick")
names(data21.allDiets)[names(data21.allDiets) == "weight.y"] <- "birthWeight"
names(data21.allDiets)[names(data21.allDiets) == "Diet.x"] <- "Diet"
fit4 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21.allDiets)
summary(fit4)
library(glmnet)
X <- cbind(data21$birthWeight, as.numeric(data21$Diet))
Y <- data21$weightGroup
cv <- cv.glmnet(X, Y, family = "binomial", alpha = 1)
X <- model.matrix(~., data21$[, c("birthWeight", Diet)])[, -1]
X <- model.matrix(~ ., data21$[, c("birthWeight", "Diet")])[, -1]
X <- model.matrix(~ ., data21$[, c("birthWeight", "Diet")])[, -1]
data21$[, c("birthWeight", "Diet")]
X <- model.matrix(~ ., data21[, c("birthWeight", "Diet")])[, -1]
View(X)
X <- model.matrix(~ ., data21[, c("birthWeight", "Diet")])[, -1]
View(X)
data21
knitr::opts_chunk$set(echo = TRUE)
data21 <- subset(ChickWeight, Diet %in% c(1,4) & Time == 21)
data21$weightGroup <- 0
data21$weightGroup[data21$weight < 110] <- 1
fit1 <- glm(weightGroup ~ Diet, family = "binomial", data = data21)
summary(fit1)
data0 <- subset(ChickWeight, Time == 0)
data21 <- merge(data21, data0, by = "Chick")
names(data21)[names(data21) == "weight.y"] <- "birthWeight"
names(data21)[names(data21) == "Diet.x"] <- "Diet"
fit2 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21)
summary(fit2)
data21.allDiets <- subset(ChickWeight, Time == 21)
data21.allDiets$weightGroup <- 0
data21.allDiets$weightGroup[data21.allDiets$weight < 110] <- 1
fit3 <- glm(weightGroup ~ Diet, family = "binomial", data = data21.allDiets)
summary(fit3)
data21.allDiets <- merge(data21.allDiets, data0, by = "Chick")
names(data21.allDiets)[names(data21.allDiets) == "weight.y"] <- "birthWeight"
names(data21.allDiets)[names(data21.allDiets) == "Diet.x"] <- "Diet"
fit4 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21.allDiets)
summary(fit4)
library(glmnet)
X <- model.matrix( ~ ., data21[c("birthWeight", "Diet")])[, -1]
Y <- data21$weightGroup
cv <- cv.glmnet(X, Y, family = "binomial")
View(X)
data21 <- subset(ChickWeight, Diet %in% c(1,4) & Time == 21)
data21$weightGroup <- 0
data21$weightGroup[data21$weight < 110] <- 1
fit1 <- glm(weightGroup ~ Diet, family = "binomial", data = data21)
summary(fit1)
data21$Diet
knitr::opts_chunk$set(echo = TRUE)
data21 <- subset(ChickWeight, Diet %in% c(1,4) & Time == 21)
data21$weightGroup <- 0
data21$weightGroup[data21$weight < 110] <- 1
fit1 <- glm(weightGroup ~ Diet, family = "binomial", data = data21)
summary(fit1)
data0 <- subset(ChickWeight, Time == 0)
data21 <- merge(data21, data0, by = "Chick")
names(data21)[names(data21) == "weight.y"] <- "birthWeight"
names(data21)[names(data21) == "Diet.x"] <- "Diet"
fit2 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21)
summary(fit2)
data21.allDiets <- subset(ChickWeight, Time == 21)
data21.allDiets$weightGroup <- 0
data21.allDiets$weightGroup[data21.allDiets$weight < 110] <- 1
fit3 <- glm(weightGroup ~ Diet, family = "binomial", data = data21.allDiets)
summary(fit3)
data21.allDiets <- merge(data21.allDiets, data0, by = "Chick")
names(data21.allDiets)[names(data21.allDiets) == "weight.y"] <- "birthWeight"
names(data21.allDiets)[names(data21.allDiets) == "Diet.x"] <- "Diet"
fit4 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21.allDiets)
summary(fit4)
X <- model.matrix( ~ ., data21[c("birthWeight", "Diet")])[, -1]
Y <- data21$weightGroup
cv <- cv.glmnet(X, Y, family = "binomial")
View(X)
View(X)
knitr::opts_chunk$set(echo = TRUE)
data21 <- subset(ChickWeight, Diet %in% c(1,4) & Time == 21)
data21$Diet <- factor(data21$Diet)
data21$weightGroup <- 0
data21$weightGroup[data21$weight < 110] <- 1
fit1 <- glm(weightGroup ~ Diet, family = "binomial", data = data21)
summary(fit1)
data0 <- subset(ChickWeight, Time == 0)
data21 <- merge(data21, data0, by = "Chick")
names(data21)[names(data21) == "weight.y"] <- "birthWeight"
names(data21)[names(data21) == "Diet.x"] <- "Diet"
fit2 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21)
summary(fit2)
data21.allDiets <- subset(ChickWeight, Time == 21)
data21.allDiets$weightGroup <- 0
data21.allDiets$weightGroup[data21.allDiets$weight < 110] <- 1
fit3 <- glm(weightGroup ~ Diet, family = "binomial", data = data21.allDiets)
summary(fit3)
data21.allDiets <- merge(data21.allDiets, data0, by = "Chick")
names(data21.allDiets)[names(data21.allDiets) == "weight.y"] <- "birthWeight"
names(data21.allDiets)[names(data21.allDiets) == "Diet.x"] <- "Diet"
fit4 <- glm(weightGroup ~ Diet + birthWeight, family = "binomial", data = data21.allDiets)
summary(fit4)
library(glmnet)
X <- model.matrix( ~ ., data21[c("birthWeight", "Diet")])[, -1]
Y <- data21$weightGroup
cv <- cv.glmnet(X, Y, family = "binomial")
View(X)
T+Y
Y
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(glmnet)
library(caret)
library(pROC)
library(VIM)
#library(performanceEstimation)
#library(mlr)
library(UBL)
dat <- read_csv("/Users/yctang/Documents/Columbia/5291 Advanced data Analysis/project/data/hmda_2017_ny_all-records_labels.csv")
# remove some variables & NA
dat <- subset(dat, select = -c(1:4, 6, 8, 10, 12, 15, 17, 19:27, 29, 31, 33:50, 51, 53, 54, 56:71, 69:71, 78))
aggr(dat)
# drop missing values
dat <- drop_na(dat)
# some adjustments: re-encoding
# owner_occupancy: unknown == 0
dat[dat$owner_occupancy == 3, ]$owner_occupancy <- 0
# preapproval: not requested == 0
dat[dat$preapproval == 2, ]$preapproval <- 0
dat[dat$preapproval == 3, ]$preapproval <- 0
# action_taken
dat = dat %>% filter(action_taken == 1 | action_taken == 2 | action_taken == 3)
dat[dat$action_taken == 2, ]$action_taken <- 1
dat[dat$action_taken == 3, ]$action_taken <- 0
# applicant_ethnicity: unknown == 0, hispanic/latino == 1, non hispanic/latino == 2
dat[dat$applicant_ethnicity == 3, ]$applicant_ethnicity <- 0
dat[dat$applicant_ethnicity == 4, ]$applicant_ethnicity <- 0
# sex: unknown == 0, male == 1, female == 2
dat[dat$applicant_sex == 3, ]$applicant_sex <- 0
dat[dat$applicant_sex == 4, ]$applicant_sex <- 0
# race: unknown == 0
dat[dat$applicant_race_1 == 6, ]$applicant_race_1 <- 0
dat[dat$applicant_race_1 == 7, ]$applicant_race_1 <- 0
names(dat)[names(dat) == "applicant_race_1"] <- "applicant_race"
# co-applicant
dat[dat$co_applicant_ethnicity == 2, ]$co_applicant_ethnicity <- 1
dat[dat$co_applicant_ethnicity == 3, ]$co_applicant_ethnicity <- 0
dat[dat$co_applicant_ethnicity == 4, ]$co_applicant_ethnicity <- 0
dat[dat$co_applicant_ethnicity == 5, ]$co_applicant_ethnicity <- 0
names(dat)[names(dat) == "co_applicant_ethnicity"] <- "co_applicant"
# Change classes of variables
dat$agency_code <- as.factor(dat$agency_code)
dat$loan_type <- as.factor(dat$loan_type)
dat$property_type <- as.factor(dat$property_type)
dat$loan_purpose <- as.factor(dat$loan_purpose)
dat$owner_occupancy <- as.factor(dat$owner_occupancy)
dat$preapproval <- as.factor(dat$preapproval)
dat$action_taken <- as.factor(dat$action_taken)
dat$applicant_ethnicity <- as.factor(dat$applicant_ethnicity)
dat$co_applicant <- as.factor(dat$co_applicant)
dat$applicant_race <- as.factor(dat$applicant_race)
dat$applicant_sex <- as.factor(dat$applicant_sex)
dat %>%
ggplot(aes(action_taken, fill = action_taken)) +
geom_bar()
dat%>%
ggplot(aes(x = action_taken)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat = "count") +
geom_text(aes(label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent", fill="day") +
scale_y_continuous(labels = scales::percent)
ggplot(dat, aes(x = action_taken)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(formatter = 'percent')
ggplot(dat, aes(x = action_taken)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(formatter = 'percent')
dat %>%
ggplot(aes(action_taken, fill = action_taken)) +
geom_bar()+
scale_y_continuous(labels = scales::percent)
